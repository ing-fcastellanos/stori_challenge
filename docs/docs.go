// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "https://example.com/terms/",
        "contact": {
            "name": "API Support",
            "email": "support@example.com"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/migrate": {
            "post": {
                "description": "Upload a CSV file with transaction data and migrate it to the database",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Upload transactions CSV and migrate to DB",
                "parameters": [
                    {
                        "type": "file",
                        "description": "CSV File",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Migración completada con éxito",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Error al recibir el archivo",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error al guardar la transacción",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/users/{user_id}/balance": {
            "get": {
                "description": "Get the balance of a user by user_id within a date range",
                "produces": [
                    "application/json"
                ],
                "summary": "Get the balance of a user within a date range",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "\"2024-01-01T00:00:00Z\"",
                        "description": "From date",
                        "name": "from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "\"2024-07-01T00:00:00Z\"",
                        "description": "To date",
                        "name": "to",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.BalanceResult"
                        }
                    },
                    "400": {
                        "description": "Error al consultar el balance",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Usuario no encontrado",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.BalanceResult": {
            "type": "object",
            "properties": {
                "total_credits": {
                    "type": "number"
                },
                "total_debits": {
                    "type": "number"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{"http"},
	Title:            "FinTech Backend API",
	Description:      "This is a simple API for handling financial transactions",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
